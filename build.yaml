---
####################################################
#          ModuleBuilder Configuration             #
####################################################
# Path to the Module Manifest to build (where path will be resolved from)
SourcePath: Source/AzBobbyTables.psd1
# Output Directory where ModuleBuilder will build the Module, relative to module manifest
OutputDirectory: ../../output/AzBobbyTables
# BuiltModuleSubdirectory: module
CopyPaths:
  # - en-US
  - ../Source/AzBobbyTables.Core/bin/AzBobbyTables.Core
  - ../Source/AzBobbyTables.PS/bin/AzBobbyTables.PS
  - ../LICENSE
  - ../CHANGELOG.md

Encoding: UTF8
# Can be used to manually specify module's semantic version if the preferred method of
# using GitVersion is not available, and it is not possible to set the session environment
# variable `$env:ModuleVersion`, nor setting the variable `$ModuleVersion`, in the
# PowerShell session (parent scope) before running the task `build`.
#SemVer: '99.0.0-preview1'

# Suffix to add to Root module PSM1 after merge (here, the Set-Alias exporting IB tasks)
# suffix: suffix.ps1
# prefix: prefix.ps1
VersionedOutputDirectory: true

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

NestedModule:
#  HelperSubmodule: # This is the first submodule to build into the output
#    Path: ./*/Modules/HelperSubmodule/HelperSubmodule.psd1
#    #  is trimmed (remove metadata & Prerelease tag) and OutputDirectory expanded (the only one)
#    OutputDirectory: ///Modules/HelperSubmodule
#    VersionedOutputDirectory: false
#    AddToManifest: false
#    SemVer: 
#    # suffix:
#    # prefix:

####################################################
#       Sampler Pipeline Configuration             #
####################################################
# Defining 'Workflows' (suite of InvokeBuild tasks) to be run using their alias
BuildWorkflow:
  '.': # "." is the default Invoke-Build workflow. It is called when no -Tasks is specified to the build.ps1
    - build
    - test

  compile:
    - dotnetBuild

  build:
    - Clean
    - dotnetBuild
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - updateMarkdownHelp
    - updateExternalHelp
    - Create_changelog_release_output


  pack:
    - build
    - package_module_nupkg



  # Defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    # Uncomment to modify the PSModulePath in the test pipeline (also requires the build configuration section SetPSModulePath).
    # - Set_PSModulePath
    - Pester_Tests_Stop_On_Fail
    # Use this task if pipeline uses code coverage and the module is using the
    # pattern of Public, Private, Enum, Classes.
    #- Convert_Pester_Coverage
    # - Pester_if_Code_Coverage_Under_Threshold

  # Use this task when you have multiple parallel tests, which produce multiple
  # code coverage files and needs to get merged into one file.
  #merge:
    #- Merge_CodeCoverage_Files

  publish:
    - publish_module_to_gallery
    - Publish_Release_To_GitHub
    # - Publish_GitHub_Wiki_Content


####################################################
#          PlatyPS Configuration                   #
####################################################
PlatyPS:
  HelpOutputFolder: en-US
  HelpMarkdownFolder: ../Docs/Help

####################################################
#       PESTER  Configuration                      #
####################################################
Pester:
  Configuration:
    Run:
      Path:
        - Tests
      ExcludePath:

      Filter:
        Tag:

        ExcludeTag:

      Output:
        Verbosity: Detailed
      CodeCoverage:
        Path:
        OutputFormat:
        CoveragePercentage: 0
        OutputPath:
        OutputEncoding:
        ExcludeTests:
      TestResult:
        OutputFormat: NUnitXML
        OutputPath:
        OutputEncoding: UTF8
        TestSuiteName:

# Use this to merged code coverage from several pipeline test jobs.
# CodeCoverageFilePattern      - the pattern used to search all pipeline test job artifacts
#                                after the file specified in CodeCoverageOutputFile.
# CodeCoverageMergedOutputFile - the file that is created by the merge build task and
#                                is the file that should be uploaded to code coverage services.
#CodeCoverage:
  #CodeCoverageFilePattern: JaCoCo_Merge.xml # the pattern used to search all pipeline test job artifacts
  #CodeCoverageMergedOutputFile: JaCoCo_coverage.xml # the file that is created for the merged code coverage

# DscTest:
#   ExcludeTag:
#     - "Common Tests - New Error-Level Script Analyzer Rules"
#   Tag:
#   ExcludeSourceFile:
#     - output
#   ExcludeModuleFile:
#     - Modules/DscResource.Common
#     - Templates

# Import ModuleBuilder tasks from a specific PowerShell module using the build
# task's alias. Wildcard * can be used to specify all tasks that has a similar
# prefix and or suffix. The module contain the task must be added as a required
# module in the file RequiredModules.psd1.
ModuleBuildTasks:
  Sampler:
    - '*.build.Sampler.ib.tasks'
  Sampler.GitHubTasks:
    - '*.ib.tasks'


# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""






